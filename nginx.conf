#user  nobody;
pid /var/run/nginx.pid;
worker_processes 1; #nginx通过工作进程处理具体的请求
worker_cpu_affinity auto; #为每个进程分配CPU的工作内核

error_log '/dev/stderr' error; #全局日志 指定 error_log 级别为 error 或 warn，以便只记录关键错误信息。

### openresty额外配置 ###
# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

events {
    use epoll; #设置事件驱动模型使用 epoll。epoll 是 Nginx 支持的高性能事件驱动库之一。
    worker_connections 100000; #默认512。一个worker进程在同一时间可处理的最大请求数。理论最大连接数= worker_processes*worker_connections
    accept_mutex on; #避免惊群问题
    accept_mutex_delay 500ms;
    multi_accept off; #让worker进程一次性地接受监听队列里的所有请求,开启可能会造成overflow
}

http {
    include mime.types;
    default_type application/octet-stream;
    charset utf-8;
    underscores_in_headers on; #默认为off，表示当客户端请求头中带有下划线的字段默认将会被标识为无效字段。
#    server_names_hash_bucket_size 512; #默认256，设置hash桶大小的参数和处理器的缓存行大小的倍数有关，通过减少内存访问次数，可以提高现代处理器在hash中搜索密钥的速度。
#    server-names-hash-max-size 1024; #默认1024，

    ### 安全模块 ###
    server_tokens off; #部分场景不起作用，关闭在错误页面中的nginx版本数字

    ### I/O模块 ###
    sendfile on; #I/O优化，避免与用户态2次交互
    directio 4m; #任何大于4m的文件将由直接I/O加载。
    directio_alignment 512; #设置使用直接I/O数据传输时的块大小，单位为字节。

    ### TCP模块 ###
    tcp_nodelay on; # 降低网络延迟
    tcp_nopush on; #默认开启，优化发送的数据包
    keepalive_timeout 3600; #TCP保持连接的时间 确保 WebSocket 连接在 60 分钟内没有活动时不会被关闭。
    send_timeout 15; #响应客户端超时时间
    client_header_timeout 10; #请求头超时时间
    client_body_timeout 10; #请求体超时时间

    ### Buffer模块 ###
    client_max_body_size 100m; #默认1M，表示客户端请求服务器最大允许大小
    client_body_buffer_size 10K; #主体缓冲区大小,小于它则放内存，大于它则放/tmp
    client_header_buffer_size 4k; #请求行+请求头缓冲区大小，无需过多纠结4K足够
    large_client_header_buffers 4 8k; #总的(请求行+请求头)的大小不能超过32k(4 * 8k)

    ### 静态文件缓存 ###
    #open_file_cache max=65535 inactive=20s; #max指定缓存数量，建议和打开文件数一致，inactive 是指经过多长时间文件没被请求后删除缓存。
    #open_file_cache_valid 60s; #检验缓存中元素有效性的频率；默认为60s
    #open_file_cache_min_uses 4; #在非活动时间段之后，非活动时长访问的小于4次，从高速缓存中清除元素
    #open_file_cache_errors on; #好像是错误信息缓存，得测

    ### 压缩模块 ###
    #gzip on; #开启gzip压缩
    #gzip_comp_level 6; # 1-9,级别越高，CPU消耗越大，压缩越慢，但网络传输越快。
    #gzip_min_length 1k; #默认为0，如果小与1K可能会越压越大。
    #gzip_buffers     4 32k; #压缩缓冲区大小，默认值是申请与原始数据大小相同的内存空间来存储gzip压缩结果。
    #gzip_disable "msie6"; #指定的客户端禁用gzip功能。如IE6
    #gzip_static on; #查找是否有预先gzip处理过的资源
    #gzip_proxied any; #允许或者禁止压缩基于请求和响应的响应流。我们设置为any，意味着将会压缩所有的请求。
    #gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript; #gzip_type 设置需要压缩的数据格式


    ### 日志模块 ###
    log_format  main  escape=json '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" "$request_body"';

    log_format log-json  escape=json
    '{ "timestamp": "$time_iso8601", '
    '"remote_addr": "$remote_addr", '
    '"remote_user": "$remote_user", '
    '"http_host": "$http_host", '
    '"request": "$request", '
    '"request_uri": "$request_uri", '
    '"request_body": "$request_body", '
    '"body_bytes_sent": "$body_bytes_sent", '
    # '"request_method": "$request_method", '
    '"status": "$status", '
    '"request_time": "$request_time", '
    '"proxy_add_x_forwarded_for": "$proxy_add_x_forwarded_for", '
    '"http_x_forwarded_for": "$http_x_forwarded_for", '
    '"http_user_agent": "$http_user_agent",'
    # '"ssl_protocol": "$ssl_protocol",'
    # '"ssl_cipher": "$ssl_cipher",'
    '"upstream_addr": "$upstream_addr",'
    '"upstream_status": "$upstream_status",'
    '"upstream_response_time": "$upstream_response_time" }';

    ### DNS缓存模块 ###
    # localhost 使用系统默认的 DNS 解析设置，valid 参数指定了 Nginx 缓存 DNS 解析结果的时间，设置为0 Nginx 将使用 DNS 记录中的 TTL 来缓存结果
    resolver localhost valid=0;

    ### 其他配置模块 ###
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
    ### openresty额外配置 ###
    # See Move default writable paths to a dedicated directory (#119)
    # https://github.com/openresty/docker-openresty/issues/119
    client_body_temp_path /var/run/openresty/nginx-client-body;
    proxy_temp_path       /var/run/openresty/nginx-proxy;
    fastcgi_temp_path     /var/run/openresty/nginx-fastcgi;
    uwsgi_temp_path       /var/run/openresty/nginx-uwsgi;
    scgi_temp_path        /var/run/openresty/nginx-scgi;
}

include /etc/nginx/streams-enabled/*;
